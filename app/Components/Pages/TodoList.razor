@rendermode InteractiveServer
@using System.Collections.ObjectModel;
@using BlazorTodo.Domain;

<div class="card">
    <div class="card-header">
        Your scheduled tasks
    </div>
    <ul class="list-group list-group-flush">
        @foreach(var task in todos){
            <li class="list-group-item">
                    <div class=" form-check">
                        <input class="form-check-input" @key=task checked="@(task.IsDone)" type="checkbox" @onchange="@(()=>OnUpdateTask(task))"/>
                        @task.Title
                    </div>
                </li>
        }
        <li class="list-group-item">
            <div class="input-group">
                <input @bind="newTaskTitle" class="form-control" />
                <button @onclick="AddTask" class="btn btn-success">add</button>
            </div>
        </li>
    </ul>
</div>

<div class="card">
    <div class="card-header">
        Your success list. Great job!
    </div>
    <ul class="list-group list-group-flush">
        @foreach(var task in dones){
            <li class="list-group-item">
                    <div class=" form-check">
                        <input class="form-check-input" @key=task checked="@(task.IsDone)" type="checkbox" @onchange="@(()=>OnUpdateTask(task))"/>
                        @task.Title
                    </div>
                </li>
        }
       
    </ul>
</div>


@code {
    private ObservableCollection<Domain.Task> todos = new ();
        private ObservableCollection<Domain.Task> dones = new ();
    string newTaskTitle = "";

    void AddTask(){
        if (string.IsNullOrWhiteSpace(newTaskTitle)){
            return;
        }
        var task = new Domain.Task{Title=newTaskTitle, IsDone = false};
        todos.Add(task);
        newTaskTitle = "";
    }

    void OnUpdateTask(Domain.Task task){
        if (task.IsDone){
            task.IsDone = false;
            dones.Remove(task);
            todos.Add(task);
        } else {
            task.IsDone = true;
            todos.Remove(task);
            dones.Add(task);
        }
    }
}
